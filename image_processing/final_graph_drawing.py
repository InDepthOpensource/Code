import numpy as np
import matplotlib.pyplot as plt
import matplotlib.ticker as mtick
from sklearn.preprocessing import PolynomialFeatures
from sklearn.pipeline import make_pipeline
from sklearn.linear_model import LinearRegression
from scipy import interpolate
from scipy.ndimage.filters import uniform_filter1d

x0 = list(range(0, 100, 10))
y0 = [0.0, 0.14167517326599688, 0.15043249341857842, 0.1264170203621125, 0.1331327566754419, 0.1376994573685059,
      0.12845860420136465, 0.10154193305754043, 0.05958201257185838, 0.021060549078600978]

x1 = [0.0, 3.103448275862064, 6.206896551724142, 9.310344827586206, 12.41379310344827, 15.517241379310349,
      18.620689655172413, 21.724137931034477, 24.827586206896555, 27.93103448275862, 31.03448275862069,
      34.13793103448276, 37.241379310344826, 40.3448275862069, 43.44827586206897, 46.55172413793103, 49.6551724137931,
      52.758620689655174, 55.86206896551724, 58.96551724137931, 62.06896551724138, 65.17241379310344, 68.27586206896552,
      71.37931034482759, 74.48275862068965, 77.58620689655173, 80.6896551724138, 83.79310344827586, 86.89655172413794,
      90.0]
y1 = [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 77.99182720373614, 65.46311805943297, 50.8475763519193,
      32.30883169783374, 14.904912462837993, 9.562791825844396, 14.076162262888815, 13.370740203964948,
      6.214567179356811, 2.7710978481627735, 1.3950327601902734, 2.8321884726843383, 1.3593497776896668,
      1.025564602441309, 0.8128085183366496, 0.32509752925877766, 0.7571901247136692, 0.32830512479326,
      0.3023056445427108, 0.29997153554772726, 0.4083602479860393, 0.26504693539480817]
x1 = np.array(x1)
y1 = np.array(y1)

x2 = [0.020202020202020204, 0.030303030303030304, 0.04040404040404041, 0.05050505050505051, 0.06060606060606061,
      0.07070707070707072, 0.08080808080808081, 0.09090909090909091, 0.10101010101010102, 0.11111111111111112,
      0.12121212121212122, 0.13131313131313133, 0.14141414141414144, 0.15151515151515152, 0.16161616161616163,
      0.17171717171717174, 0.18181818181818182, 0.19191919191919193, 0.20202020202020204, 0.21212121212121213,
      0.22222222222222224, 0.23232323232323235, 0.24242424242424243, 0.25252525252525254, 0.26262626262626265,
      0.27272727272727276, 0.2828282828282829, 0.29292929292929293, 0.30303030303030304, 0.31313131313131315,
      0.32323232323232326, 0.33333333333333337, 0.3434343434343435, 0.3535353535353536, 0.36363636363636365,
      0.37373737373737376, 0.38383838383838387, 0.393939393939394, 0.4040404040404041, 0.4141414141414142,
      0.42424242424242425, 0.43434343434343436, 0.4444444444444445, 0.4545454545454546, 0.4646464646464647,
      0.4747474747474748, 0.48484848484848486, 0.494949494949495, 0.5050505050505051, 0.5151515151515152,
      0.5252525252525253, 0.5353535353535354, 0.5454545454545455, 0.5555555555555556, 0.5656565656565657,
      0.5757575757575758, 0.5858585858585859, 0.595959595959596, 0.6060606060606061, 0.6161616161616162,
      0.6262626262626263, 0.6363636363636365, 0.6464646464646465, 0.6565656565656566, 0.6666666666666667,
      0.6767676767676768, 0.686868686868687, 0.696969696969697, 0.7070707070707072, 0.7171717171717172,
      0.7272727272727273, 0.7373737373737375, 0.7474747474747475, 0.7575757575757577, 0.7676767676767677,
      0.7777777777777778, 0.787878787878788, 0.797979797979798, 0.8080808080808082, 0.8181818181818182,
      0.8282828282828284, 0.8383838383838385, 0.8484848484848485, 0.8585858585858587, 0.8686868686868687,
      0.8787878787878789, 0.888888888888889, 0.8989898989898991, 0.9090909090909092, 0.9191919191919192,
      0.9292929292929294, 0.9393939393939394, 0.9494949494949496, 0.9595959595959597, 0.9696969696969697,
      0.9797979797979799, 0.98989898989899, 1.0]
y2 = [71.94344613112247, 70.51029076567661, 68.14274124306078, 67.59072917412013, 65.5292864418722, 64.86911452448705,
      63.74483951268927, 62.47008701172201, 61.66967367903946, 61.268813236062115, 59.72460475937294,
      58.305091475689565, 56.53630741795814, 55.10723888343134, 54.718413818124844, 53.93035282055343, 52.969502503764,
      53.3522439646771, 53.5223591066563, 52.866816368009765, 52.723473003238084, 51.55293965603561, 49.70769076870465,
      47.956186000787206, 46.85202286066671, 45.89668441550474, 45.142895649610146, 44.752845425165525,
      44.597982085789944, 43.9345542301708, 43.349349080987906, 43.816978038474886, 44.08796197861297,
      44.76553161185692, 44.37114315688554, 43.458696396358995, 42.40589315217396, 42.099403174969396,
      41.79436912252476, 40.65144122852611, 39.89719546731229, 39.362194355730686, 39.05576389975891, 38.42603945628459,
      38.0431881903329, 37.201591668829536, 36.86651597650219, 36.01544879326637, 34.700307342609285, 33.27042065040159,
      32.24308480160825, 31.010616975907055, 29.719149308465386, 29.310343569012364, 29.411543715863964,
      28.812165038213266, 29.10842661571853, 27.803335656834037, 26.827935939779856, 25.386073556395672,
      23.565052423163845, 21.742106634874425, 19.987821562420148, 19.07238568047308, 17.901655597613942,
      17.642455354486962, 17.963348712052174, 18.401150959005708, 19.20244589356367, 20.071243036173712,
      20.568105990873697, 20.75688727238084, 22.005193249443934, 23.10003648039244, 23.54455491696774,
      24.455375839828385, 25.67338222612533, 27.980461810458714, 29.92728519893414, 32.636598921648826,
      34.71246951050229, 35.93867271127343, 37.11490735645383, 37.41484895626825, 38.218745060850324, 38.78344829196062,
      41.273455490617806, 42.90913669183662, 43.3745910554976, 42.82372212781781, 43.66628348790287, 45.67092075656123,
      48.27339904767863, 49.015098738928295, 48.46449293691787, 49.35305334388561, 49.82799671855873, 60.79965746551239]
x2 = np.array(x2)
y2 = np.array(y2)

if __name__ == '__main__':
    plt.rcParams.update({'font.size': 32})
    plt.rcParams["font.family"] = "Times New Roman"
    plt.rcParams["font.weight"] = 600
    plt.rc("axes", labelweight=600)
    fig, (ax0, ax1, ax2) = plt.subplots(1, 3, figsize=(18, 6),)

    # fig, (ax1, ax2) = plt.subplots(1, 2)
    y0 = np.array(y0)
    ax0.set_xlabel("Missing depth (%)")
    ax0.set_ylabel("Probability density")
    y_range_start = 0
    y_range_end = 0.16
    y_range = np.linspace(y_range_start, y_range_end, 5, True)
    ax0.axis(ymin=y_range_start, ymax=y_range_end)
    ax0.set_yticks(list(y_range))
    ax0.xaxis.set_tick_params(width=3)
    ax0.yaxis.set_tick_params(width=3)
    ax0.patch.set_edgecolor('black')
    ax0.patch.set_linewidth('3')

    ax0.bar(x0, y0, width=8, color="tab:blue", edgecolor='black', linewidth=2, zorder=3)

    gap = 10
    ax0.set_xticks(list(range(0, 100, gap)))
    xticklabels = list()
    for x in range(0, 100, gap):
        xticklabels.append("{}-{}".format(x, x + 10))
    ax0.set_xticklabels(xticklabels, rotation=45, fontsize=20)
    ax0.grid(linestyle='-', axis='y')

    ax1.scatter(x1, y1, s=9 ** 2, color='tab:blue', clip_on=False)
    smoothed1 = uniform_filter1d(y1, 7)
    ax1.plot(x1, smoothed1, linewidth=10, color='tab:orange')
    ax1.grid(linestyle='-')

    x_range_start = 0
    x_range_end = 90

    y_range_start = 0
    y_range_end = 100

    x_range = np.linspace(x_range_start, x_range_end, 4, True)
    y_range = np.linspace(y_range_start, y_range_end, 5, True)
    ax1.axis(xmin=x_range_start - 3, xmax=x_range_end + 3)
    ax1.axis(ymin=y_range_start - 3, ymax=y_range_end + 3)

    ax1.set_xticks(list(x_range))
    ax1.set_yticks(list(y_range))
    ax1.xaxis.set_tick_params(width=3)
    ax1.yaxis.set_tick_params(width=3)

    ax1.patch.set_edgecolor('black')
    ax1.patch.set_linewidth('3')

    ax1.set_xlabel('Angle to optical axis ($\degree$)')
    ax1.set_ylabel(r'Missing depth (%)')

    ax2.scatter(x2, y2, s=9 ** 2, color='tab:blue', clip_on=False)
    smoothed2 = uniform_filter1d(y2, 15)
    ax2.plot(x2, smoothed2, linewidth=10, color='tab:orange')
    ax2.grid(linestyle='-')

    x_range_start = 0
    x_range_end = 1

    y_range_start = 0
    y_range_end = 100

    x_range = np.linspace(x_range_start, x_range_end, 5, True)
    y_range = np.linspace(y_range_start, y_range_end, 5, True)

    ax2.axis(xmin=x_range_start - 0.03, xmax=x_range_end + 0.03)
    ax2.axis(ymin=y_range_start - 3, ymax=y_range_end + 3)

    ax2.set_xticks(list(x_range))
    ax2.set_yticks(list(y_range))
    ax2.xaxis.set_tick_params(width=3)
    ax2.yaxis.set_tick_params(width=3)

    # ax2.yaxis.set_major_formatter(mtick.PercentFormatter())
    ax2.patch.set_edgecolor('black')
    ax2.patch.set_linewidth('3')

    ax2.set_xlabel('Relative luminance')
    ax2.set_ylabel(r'Missing depth (%)')

    fig.align_xlabels()
    plt.tight_layout()
    plt.show()
